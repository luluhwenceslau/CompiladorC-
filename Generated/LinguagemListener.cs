//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Gramatica/Linguagem.g4 by ANTLR 4.13.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LinguagemParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.0")]
[System.CLSCompliant(false)]
public interface ILinguagemListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrograma([NotNull] LinguagemParser.ProgramaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrograma([NotNull] LinguagemParser.ProgramaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.comando"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComando([NotNull] LinguagemParser.ComandoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.comando"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComando([NotNull] LinguagemParser.ComandoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.escreva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEscreva([NotNull] LinguagemParser.EscrevaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.escreva"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEscreva([NotNull] LinguagemParser.EscrevaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.leia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeia([NotNull] LinguagemParser.LeiaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.leia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeia([NotNull] LinguagemParser.LeiaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.retorne"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetorne([NotNull] LinguagemParser.RetorneContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.retorne"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetorne([NotNull] LinguagemParser.RetorneContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.declaracao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracao([NotNull] LinguagemParser.DeclaracaoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.declaracao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracao([NotNull] LinguagemParser.DeclaracaoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.atribuicao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtribuicao([NotNull] LinguagemParser.AtribuicaoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.atribuicao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtribuicao([NotNull] LinguagemParser.AtribuicaoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.se"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSe([NotNull] LinguagemParser.SeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.se"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSe([NotNull] LinguagemParser.SeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.enquanto"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnquanto([NotNull] LinguagemParser.EnquantoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.enquanto"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnquanto([NotNull] LinguagemParser.EnquantoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.bloco"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBloco([NotNull] LinguagemParser.BlocoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.bloco"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBloco([NotNull] LinguagemParser.BlocoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>texto</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTexto([NotNull] LinguagemParser.TextoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>texto</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTexto([NotNull] LinguagemParser.TextoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>agrupamento</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAgrupamento([NotNull] LinguagemParser.AgrupamentoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>agrupamento</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAgrupamento([NotNull] LinguagemParser.AgrupamentoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>inteiro</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInteiro([NotNull] LinguagemParser.InteiroContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>inteiro</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInteiro([NotNull] LinguagemParser.InteiroContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleano</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleano([NotNull] LinguagemParser.BooleanoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleano</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleano([NotNull] LinguagemParser.BooleanoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operacao</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperacao([NotNull] LinguagemParser.OperacaoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operacao</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperacao([NotNull] LinguagemParser.OperacaoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparacao</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparacao([NotNull] LinguagemParser.ComparacaoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparacao</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparacao([NotNull] LinguagemParser.ComparacaoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>variavel</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariavel([NotNull] LinguagemParser.VariavelContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>variavel</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariavel([NotNull] LinguagemParser.VariavelContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>decimal</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimal([NotNull] LinguagemParser.DecimalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>decimal</c>
	/// labeled alternative in <see cref="LinguagemParser.expressao"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimal([NotNull] LinguagemParser.DecimalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LinguagemParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTipo([NotNull] LinguagemParser.TipoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LinguagemParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTipo([NotNull] LinguagemParser.TipoContext context);
}
